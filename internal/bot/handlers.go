package bot

import (
	"fmt"
	"strings"
	"time"

	"gopkg.in/telebot.v3"
)

func (b *Bot) registerHandlers() {
	b.tgBot.Handle("/start", b.handleStart)
	b.tgBot.Handle("/help", b.handleHelp)
	b.tgBot.Handle("/meeting", b.handleMeetingInfo)
	b.tgBot.Handle(telebot.OnUserJoined, b.handleUserJoined)
	
	adminGroup := b.tgBot.Group()
	adminGroup.Use(b.requireAdmin)
	adminGroup.Handle("/admin", b.handleAdminHelp)
	adminGroup.Handle("/set_schedule", b.handleSetSchedule)
	adminGroup.Handle("/set_invitation", b.handleSetInvitation)
	adminGroup.Handle("/set_reminder", b.handleSetReminder)
	adminGroup.Handle("/set_link", b.handleSetStreamLink)
	adminGroup.Handle("/stats", b.handleStats)
	adminGroup.Handle("/participants", b.handleParticipantsList)
}

func (b *Bot) requireAdmin(next telebot.HandlerFunc) telebot.HandlerFunc {
	return func(c telebot.Context) error {
		for _, adminID := range b.cfg.Telegram.AdminIDs {
			if c.Sender().ID == adminID {
				return next(c)
			}
		}
		return c.Send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
	}
}

func (b *Bot) handleStart(c telebot.Context) error {
	return c.Send("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É –ê–Ω–æ–Ω–∏–º–Ω—ã—Ö –ù–∞—Ä–∫–æ–º–∞–Ω–æ–≤!")
}

func (b *Bot) handleHelp(c telebot.Context) error {
	return c.Send(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/meeting - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å—Ç—Ä–µ—á–µ`)
}

func (b *Bot) handleMeetingInfo(c telebot.Context) error {
	if len(b.cfg.Meeting.Schedule) == 0 {
		return c.Send("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
	}
	
	next := b.cfg.Meeting.Schedule[0]
	msg := fmt.Sprintf("–°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞: %s –≤ %s", next.Day, next.Time)
	
	if b.cfg.Meeting.StreamLink != "" {
		msg += fmt.Sprintf("\n–°—Å—ã–ª–∫–∞: %s", b.cfg.Meeting.StreamLink)
	}
	
	return c.Send(msg)
}

func (b *Bot) handleUserJoined(c telebot.Context) error {
	user := c.Sender()
	b.meeting.AddParticipant(user.ID, user.Username)
	
	text := strings.ReplaceAll(b.cfg.Meeting.InvitationText, 
		"{–≤—Ä–µ–º—è}", b.cfg.Meeting.Schedule[0].Time)
	text = strings.ReplaceAll(text, "{—Å—Å—ã–ª–∫–∞}", b.cfg.Meeting.StreamLink)
	
	return c.Send(fmt.Sprintf("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!\n%s", user.FirstName, text))
}

// ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ...
